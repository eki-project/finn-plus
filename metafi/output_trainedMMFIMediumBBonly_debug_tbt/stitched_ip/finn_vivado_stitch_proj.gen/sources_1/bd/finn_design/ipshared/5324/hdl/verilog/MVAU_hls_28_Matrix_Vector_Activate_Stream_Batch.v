// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MVAU_hls_28_Matrix_Vector_Activate_Stream_Batch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in0_V_TVALID,
        weights_V_TVALID,
        out_V_TREADY,
        in0_V_TDATA,
        in0_V_TREADY,
        out_V_TDATA,
        out_V_TVALID,
        weights_V_TDATA,
        weights_V_TREADY
);

parameter    ap_ST_iter0_fsm_state1 = 1'd1;
parameter    ap_ST_iter1_fsm_state2 = 2'd2;
parameter    ap_ST_iter2_fsm_state3 = 2'd2;
parameter    ap_ST_iter3_fsm_state4 = 2'd2;
parameter    ap_ST_iter4_fsm_state5 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;
parameter    ap_ST_iter2_fsm_state0 = 2'd1;
parameter    ap_ST_iter3_fsm_state0 = 2'd1;
parameter    ap_ST_iter4_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in0_V_TVALID;
input   weights_V_TVALID;
input   out_V_TREADY;
input  [7:0] in0_V_TDATA;
output   in0_V_TREADY;
output  [7:0] out_V_TDATA;
output   out_V_TVALID;
input  [7:0] weights_V_TDATA;
output   weights_V_TREADY;

reg ap_idle;
reg in0_V_TREADY;
reg out_V_TVALID;
reg weights_V_TREADY;

reg   [0:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state0;
reg   [1:0] ap_CS_iter2_fsm;
wire    ap_CS_iter2_fsm_state0;
reg   [1:0] ap_CS_iter3_fsm;
wire    ap_CS_iter3_fsm_state0;
reg   [1:0] ap_CS_iter4_fsm;
wire    ap_CS_iter4_fsm_state0;
wire   [0:0] icmp_ln249_fu_354_p2;
wire   [0:0] icmp_ln253_fu_366_p2;
reg    ap_predicate_op37_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_CS_iter1_fsm_state2;
reg   [0:0] icmp_ln249_reg_989;
reg   [0:0] icmp_ln249_reg_989_pp0_iter3_reg;
reg   [0:0] icmp_ln290_reg_1017;
reg   [0:0] icmp_ln290_reg_1017_pp0_iter3_reg;
reg    ap_predicate_op194_write_state5;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_state5_io;
wire    ap_CS_iter4_fsm_state5;
reg    ap_block_state4_pp0_stage0_iter3;
wire    ap_CS_iter3_fsm_state4;
reg    ap_block_state3_pp0_stage0_iter2;
wire    ap_CS_iter2_fsm_state3;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [5:0] p_ZL7threshs_0_address0;
reg    p_ZL7threshs_0_ce0;
wire   [7:0] p_ZL7threshs_0_q0;
wire   [5:0] p_ZL7threshs_1_address0;
reg    p_ZL7threshs_1_ce0;
wire   [7:0] p_ZL7threshs_1_q0;
wire   [5:0] p_ZL7threshs_2_address0;
reg    p_ZL7threshs_2_ce0;
wire   [7:0] p_ZL7threshs_2_q0;
wire   [5:0] p_ZL7threshs_3_address0;
reg    p_ZL7threshs_3_ce0;
wire   [7:0] p_ZL7threshs_3_q0;
wire   [5:0] p_ZL7threshs_4_address0;
reg    p_ZL7threshs_4_ce0;
wire   [7:0] p_ZL7threshs_4_q0;
wire   [5:0] p_ZL7threshs_5_address0;
reg    p_ZL7threshs_5_ce0;
wire   [7:0] p_ZL7threshs_5_q0;
wire   [5:0] p_ZL7threshs_6_address0;
reg    p_ZL7threshs_6_ce0;
wire   [7:0] p_ZL7threshs_6_q0;
wire   [5:0] p_ZL7threshs_7_address0;
reg    p_ZL7threshs_7_ce0;
wire   [7:0] p_ZL7threshs_7_q0;
wire   [5:0] p_ZL7threshs_8_address0;
reg    p_ZL7threshs_8_ce0;
wire   [6:0] p_ZL7threshs_8_q0;
wire   [5:0] p_ZL7threshs_9_address0;
reg    p_ZL7threshs_9_ce0;
wire   [6:0] p_ZL7threshs_9_q0;
wire   [5:0] p_ZL7threshs_10_address0;
reg    p_ZL7threshs_10_ce0;
wire   [6:0] p_ZL7threshs_10_q0;
wire   [5:0] p_ZL7threshs_11_address0;
reg    p_ZL7threshs_11_ce0;
wire   [6:0] p_ZL7threshs_11_q0;
wire   [5:0] p_ZL7threshs_12_address0;
reg    p_ZL7threshs_12_ce0;
wire   [6:0] p_ZL7threshs_12_q0;
wire   [5:0] p_ZL7threshs_13_address0;
reg    p_ZL7threshs_13_ce0;
wire   [6:0] p_ZL7threshs_13_q0;
wire   [5:0] p_ZL7threshs_14_address0;
reg    p_ZL7threshs_14_ce0;
wire   [6:0] p_ZL7threshs_14_q0;
reg    in0_V_TDATA_blk_n;
reg    out_V_TDATA_blk_n;
reg    weights_V_TDATA_blk_n;
reg   [31:0] nf_2_reg_984;
reg   [31:0] nf_2_reg_984_pp0_iter1_reg;
reg   [31:0] nf_2_reg_984_pp0_iter2_reg;
reg   [0:0] icmp_ln249_reg_989_pp0_iter1_reg;
reg   [0:0] icmp_ln249_reg_989_pp0_iter2_reg;
wire   [3:0] tmp_fu_385_p4;
wire   [3:0] inputBuf_V_3_fu_395_p1;
wire   [2:0] W_packed_V_fu_432_p1;
reg   [2:0] W_packed_V_reg_1007;
wire   [0:0] icmp_ln272_fu_436_p2;
reg   [0:0] icmp_ln272_reg_1012;
reg   [0:0] icmp_ln272_reg_1012_pp0_iter1_reg;
reg   [0:0] icmp_ln272_reg_1012_pp0_iter2_reg;
wire   [0:0] icmp_ln290_fu_448_p2;
reg   [0:0] icmp_ln290_reg_1017_pp0_iter1_reg;
reg   [0:0] icmp_ln290_reg_1017_pp0_iter2_reg;
wire   [3:0] ap_phi_reg_pp0_iter0_inElem_reg_324;
reg  signed [3:0] ap_phi_reg_pp0_iter1_inElem_reg_324;
wire   [63:0] idxprom2_i_fu_511_p1;
reg   [31:0] sf_fu_86;
wire   [31:0] sf_1_fu_442_p2;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_sf_load;
reg   [31:0] ap_sig_allocacmp_sf_load_1;
reg   [10:0] i_fu_90;
wire   [10:0] i_2_fu_360_p2;
reg   [10:0] ap_sig_allocacmp_i_1;
reg   [7:0] add_i4_i338_fu_94;
wire  signed [7:0] grp_fu_919_p3;
reg   [7:0] ap_sig_allocacmp_add_i4_i338_load;
reg   [31:0] nf_1_fu_98;
wire   [31:0] nf_3_fu_471_p3;
reg   [31:0] ap_sig_allocacmp_nf_2;
reg   [3:0] inputBuf_V_fu_102;
wire   [3:0] select_ln257_1_fu_411_p3;
reg   [3:0] inputBuf_V_1_fu_106;
wire   [3:0] select_ln257_fu_403_p3;
wire   [0:0] tmp_fu_385_p3;
wire   [0:0] trunc_ln257_fu_399_p1;
wire   [31:0] nf_fu_459_p2;
wire   [0:0] icmp_ln302_fu_465_p2;
wire   [0:0] icmp_ln1039_fu_529_p2;
wire   [0:0] xor_ln1039_fu_534_p2;
wire   [0:0] icmp_ln1039_1_fu_548_p2;
wire   [0:0] xor_ln1039_1_fu_553_p2;
wire   [0:0] icmp_ln1039_2_fu_563_p2;
wire   [0:0] xor_ln1039_2_fu_568_p2;
wire   [0:0] icmp_ln1039_3_fu_578_p2;
wire   [0:0] xor_ln1039_3_fu_583_p2;
wire   [0:0] icmp_ln1039_4_fu_593_p2;
wire   [0:0] xor_ln1039_4_fu_598_p2;
wire   [0:0] icmp_ln1039_5_fu_608_p2;
wire   [0:0] xor_ln1039_5_fu_613_p2;
wire   [0:0] icmp_ln1039_6_fu_623_p2;
wire   [0:0] xor_ln1039_6_fu_628_p2;
wire   [0:0] icmp_ln1039_7_fu_638_p2;
wire   [0:0] xor_ln1039_7_fu_643_p2;
wire   [7:0] zext_ln1039_fu_653_p1;
wire   [0:0] icmp_ln1039_8_fu_657_p2;
wire   [0:0] xor_ln1039_8_fu_662_p2;
wire   [7:0] zext_ln1039_1_fu_672_p1;
wire   [0:0] icmp_ln1039_9_fu_676_p2;
wire   [0:0] xor_ln1039_9_fu_681_p2;
wire   [7:0] zext_ln1039_2_fu_691_p1;
wire   [0:0] icmp_ln1039_10_fu_695_p2;
wire   [0:0] xor_ln1039_10_fu_700_p2;
wire   [7:0] zext_ln1039_3_fu_710_p1;
wire   [0:0] icmp_ln1039_11_fu_714_p2;
wire   [0:0] xor_ln1039_11_fu_719_p2;
wire   [7:0] zext_ln1039_4_fu_729_p1;
wire   [0:0] icmp_ln1039_12_fu_733_p2;
wire   [0:0] xor_ln1039_12_fu_738_p2;
wire   [7:0] zext_ln1039_5_fu_748_p1;
wire   [0:0] icmp_ln1039_13_fu_752_p2;
wire   [0:0] xor_ln1039_13_fu_757_p2;
wire   [7:0] zext_ln1039_6_fu_767_p1;
wire   [0:0] icmp_ln1039_14_fu_771_p2;
wire   [0:0] xor_ln1039_14_fu_776_p2;
wire   [1:0] zext_ln218_fu_559_p1;
wire   [1:0] zext_ln218_1_fu_574_p1;
wire   [1:0] add_ln840_1_fu_786_p2;
wire   [3:0] zext_ln840_1_fu_792_p1;
wire   [3:0] result_V_fu_540_p3;
wire   [1:0] zext_ln218_2_fu_589_p1;
wire   [1:0] zext_ln218_3_fu_604_p1;
wire   [1:0] add_ln840_3_fu_802_p2;
wire   [1:0] zext_ln218_4_fu_619_p1;
wire   [1:0] zext_ln218_5_fu_634_p1;
wire   [1:0] add_ln840_4_fu_812_p2;
wire   [2:0] zext_ln840_3_fu_818_p1;
wire   [2:0] zext_ln840_2_fu_808_p1;
wire   [2:0] add_ln840_5_fu_822_p2;
wire   [3:0] zext_ln840_4_fu_828_p1;
wire   [3:0] add_ln840_2_fu_796_p2;
wire   [1:0] zext_ln218_6_fu_649_p1;
wire   [1:0] zext_ln218_7_fu_668_p1;
wire   [1:0] add_ln840_7_fu_838_p2;
wire   [1:0] zext_ln218_8_fu_687_p1;
wire   [1:0] zext_ln218_9_fu_706_p1;
wire   [1:0] add_ln840_8_fu_848_p2;
wire   [2:0] zext_ln840_6_fu_854_p1;
wire   [2:0] zext_ln840_5_fu_844_p1;
wire   [2:0] add_ln840_9_fu_858_p2;
wire   [1:0] zext_ln218_10_fu_725_p1;
wire   [1:0] zext_ln218_11_fu_744_p1;
wire   [1:0] add_ln840_10_fu_868_p2;
wire   [1:0] zext_ln218_12_fu_763_p1;
wire   [1:0] zext_ln840_fu_782_p1;
wire   [1:0] add_ln840_11_fu_878_p2;
wire   [2:0] zext_ln840_9_fu_884_p1;
wire   [2:0] zext_ln840_8_fu_874_p1;
wire   [2:0] add_ln840_12_fu_888_p2;
wire   [3:0] zext_ln840_10_fu_894_p1;
wire   [3:0] zext_ln840_7_fu_864_p1;
wire   [3:0] add_ln840_13_fu_898_p2;
wire   [3:0] add_ln840_6_fu_832_p2;
wire   [3:0] result_V_2_fu_904_p2;
wire   [2:0] grp_fu_919_p1;
wire  signed [7:0] grp_fu_919_p2;
reg    grp_fu_919_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg   [1:0] ap_NS_iter2_fsm;
reg   [1:0] ap_NS_iter3_fsm;
reg   [1:0] ap_NS_iter4_fsm;
reg    ap_ST_iter0_fsm_state1_blk;
wire    ap_ST_iter1_fsm_state2_blk;
reg    ap_ST_iter2_fsm_state3_blk;
reg    ap_ST_iter3_fsm_state4_blk;
reg    ap_ST_iter4_fsm_state5_blk;
wire    ap_start_int;
wire   [6:0] grp_fu_919_p10;
reg    ap_condition_857;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_iter0_fsm = 1'd1;
#0 ap_CS_iter1_fsm = 2'd1;
#0 ap_CS_iter2_fsm = 2'd1;
#0 ap_CS_iter3_fsm = 2'd1;
#0 ap_CS_iter4_fsm = 2'd1;
#0 ap_done_reg = 1'b0;
end

MVAU_hls_28_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_0_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
p_ZL7threshs_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_0_address0),
    .ce0(p_ZL7threshs_0_ce0),
    .q0(p_ZL7threshs_0_q0)
);

MVAU_hls_28_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_1_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
p_ZL7threshs_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_1_address0),
    .ce0(p_ZL7threshs_1_ce0),
    .q0(p_ZL7threshs_1_q0)
);

MVAU_hls_28_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_2_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
p_ZL7threshs_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_2_address0),
    .ce0(p_ZL7threshs_2_ce0),
    .q0(p_ZL7threshs_2_q0)
);

MVAU_hls_28_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_3_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
p_ZL7threshs_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_3_address0),
    .ce0(p_ZL7threshs_3_ce0),
    .q0(p_ZL7threshs_3_q0)
);

MVAU_hls_28_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_4_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
p_ZL7threshs_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_4_address0),
    .ce0(p_ZL7threshs_4_ce0),
    .q0(p_ZL7threshs_4_q0)
);

MVAU_hls_28_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_5_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
p_ZL7threshs_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_5_address0),
    .ce0(p_ZL7threshs_5_ce0),
    .q0(p_ZL7threshs_5_q0)
);

MVAU_hls_28_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_6_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
p_ZL7threshs_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_6_address0),
    .ce0(p_ZL7threshs_6_ce0),
    .q0(p_ZL7threshs_6_q0)
);

MVAU_hls_28_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_7_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
p_ZL7threshs_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_7_address0),
    .ce0(p_ZL7threshs_7_ce0),
    .q0(p_ZL7threshs_7_q0)
);

MVAU_hls_28_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_8_ROM_AUTO_1R #(
    .DataWidth( 7 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
p_ZL7threshs_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_8_address0),
    .ce0(p_ZL7threshs_8_ce0),
    .q0(p_ZL7threshs_8_q0)
);

MVAU_hls_28_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_9_ROM_AUTO_1R #(
    .DataWidth( 7 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
p_ZL7threshs_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_9_address0),
    .ce0(p_ZL7threshs_9_ce0),
    .q0(p_ZL7threshs_9_q0)
);

MVAU_hls_28_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_10_ROM_AUTO_1R #(
    .DataWidth( 7 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
p_ZL7threshs_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_10_address0),
    .ce0(p_ZL7threshs_10_ce0),
    .q0(p_ZL7threshs_10_q0)
);

MVAU_hls_28_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_11_ROM_AUTO_1R #(
    .DataWidth( 7 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
p_ZL7threshs_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_11_address0),
    .ce0(p_ZL7threshs_11_ce0),
    .q0(p_ZL7threshs_11_q0)
);

MVAU_hls_28_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_12_ROM_AUTO_1R #(
    .DataWidth( 7 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
p_ZL7threshs_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_12_address0),
    .ce0(p_ZL7threshs_12_ce0),
    .q0(p_ZL7threshs_12_q0)
);

MVAU_hls_28_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_13_ROM_AUTO_1R #(
    .DataWidth( 7 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
p_ZL7threshs_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_13_address0),
    .ce0(p_ZL7threshs_13_ce0),
    .q0(p_ZL7threshs_13_q0)
);

MVAU_hls_28_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_14_ROM_AUTO_1R #(
    .DataWidth( 7 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
p_ZL7threshs_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_14_address0),
    .ce0(p_ZL7threshs_14_ce0),
    .q0(p_ZL7threshs_14_q0)
);

MVAU_hls_28_mux_21_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 4 ))
mux_21_4_1_1_U1(
    .din0(inputBuf_V_fu_102),
    .din1(inputBuf_V_1_fu_106),
    .din2(tmp_fu_385_p3),
    .dout(tmp_fu_385_p4)
);

MVAU_hls_28_mac_muladd_4s_3ns_8s_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_4s_3ns_8s_8_4_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter1_inElem_reg_324),
    .din1(grp_fu_919_p1),
    .din2(grp_fu_919_p2),
    .ce(grp_fu_919_ce),
    .dout(grp_fu_919_p3)
);

MVAU_hls_28_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
    end else begin
        ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter3_fsm <= ap_ST_iter3_fsm_state0;
    end else begin
        ap_CS_iter3_fsm <= ap_NS_iter3_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter4_fsm <= ap_ST_iter4_fsm_state0;
    end else begin
        ap_CS_iter4_fsm <= ap_NS_iter4_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b1 == ap_CS_iter4_fsm_state5))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (1'b1 == ap_CS_iter4_fsm_state5))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_857)) begin
        if (((icmp_ln253_fu_366_p2 == 1'd1) & (icmp_ln249_fu_354_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_inElem_reg_324 <= inputBuf_V_3_fu_395_p1;
        end else if (((icmp_ln253_fu_366_p2 == 1'd0) & (icmp_ln249_fu_354_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_inElem_reg_324 <= tmp_fu_385_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_inElem_reg_324 <= ap_phi_reg_pp0_iter0_inElem_reg_324;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_857)) begin
        if ((icmp_ln249_fu_354_p2 == 1'd0)) begin
            i_fu_90 <= i_2_fu_360_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_90 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_857)) begin
        if (((icmp_ln249_fu_354_p2 == 1'd0) & (icmp_ln290_fu_448_p2 == 1'd1))) begin
            nf_1_fu_98 <= nf_3_fu_471_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            nf_1_fu_98 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_857)) begin
        if (((icmp_ln249_fu_354_p2 == 1'd0) & (icmp_ln290_fu_448_p2 == 1'd1))) begin
            sf_fu_86 <= 32'd0;
        end else if (((icmp_ln249_fu_354_p2 == 1'd0) & (icmp_ln290_fu_448_p2 == 1'd0))) begin
            sf_fu_86 <= sf_1_fu_442_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            sf_fu_86 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_354_p2 == 1'd0)) | ((ap_predicate_op37_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_354_p2 == 1'd0))) begin
        W_packed_V_reg_1007 <= W_packed_V_fu_432_p1;
        icmp_ln272_reg_1012 <= icmp_ln272_fu_436_p2;
        icmp_ln290_reg_1017 <= icmp_ln290_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))) & (icmp_ln249_reg_989_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_iter4_fsm_state5))) begin
        add_i4_i338_fu_94 <= grp_fu_919_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_354_p2 == 1'd0)) | ((ap_predicate_op37_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln249_reg_989 <= icmp_ln249_fu_354_p2;
        nf_2_reg_984 <= ap_sig_allocacmp_nf_2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln249_reg_989_pp0_iter1_reg <= icmp_ln249_reg_989;
        icmp_ln272_reg_1012_pp0_iter1_reg <= icmp_ln272_reg_1012;
        icmp_ln290_reg_1017_pp0_iter1_reg <= icmp_ln290_reg_1017;
        nf_2_reg_984_pp0_iter1_reg <= nf_2_reg_984;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        icmp_ln249_reg_989_pp0_iter2_reg <= icmp_ln249_reg_989_pp0_iter1_reg;
        icmp_ln272_reg_1012_pp0_iter2_reg <= icmp_ln272_reg_1012_pp0_iter1_reg;
        icmp_ln290_reg_1017_pp0_iter2_reg <= icmp_ln290_reg_1017_pp0_iter1_reg;
        nf_2_reg_984_pp0_iter2_reg <= nf_2_reg_984_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        icmp_ln249_reg_989_pp0_iter3_reg <= icmp_ln249_reg_989_pp0_iter2_reg;
        icmp_ln290_reg_1017_pp0_iter3_reg <= icmp_ln290_reg_1017_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_354_p2 == 1'd0)) | ((ap_predicate_op37_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))))) & (icmp_ln253_fu_366_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_354_p2 == 1'd0))) begin
        inputBuf_V_1_fu_106 <= select_ln257_fu_403_p3;
        inputBuf_V_fu_102 <= select_ln257_1_fu_411_p3;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_354_p2 == 1'd0)) | ((ap_predicate_op37_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)))) begin
        ap_ST_iter0_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_iter1_fsm_state2_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_iter4_fsm_state5) & (1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))))) begin
        ap_ST_iter2_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_iter2_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))))) begin
        ap_ST_iter3_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_iter3_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) begin
        ap_ST_iter4_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_iter4_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_354_p2 == 1'd0)) | ((ap_predicate_op37_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_354_p2 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b1 == ap_CS_iter4_fsm_state5))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_iter4_fsm_state0) & (1'b1 == ap_CS_iter3_fsm_state0) & (1'b1 == ap_CS_iter2_fsm_state0) & (1'b1 == ap_CS_iter1_fsm_state0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_354_p2 == 1'd0)) | ((ap_predicate_op37_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln249_reg_989_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_iter4_fsm_state5))) begin
        ap_sig_allocacmp_add_i4_i338_load = grp_fu_919_p3;
    end else begin
        ap_sig_allocacmp_add_i4_i338_load = add_i4_i338_fu_94;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 11'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_90;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_nf_2 = 32'd0;
    end else begin
        ap_sig_allocacmp_nf_2 = nf_1_fu_98;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_sf_load = 32'd0;
    end else begin
        ap_sig_allocacmp_sf_load = sf_fu_86;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_sf_load_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_sf_load_1 = sf_fu_86;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))) & (1'b1 == ap_CS_iter4_fsm_state5)) | (~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2)) | (~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter2_fsm_state3)) | (~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4)))) begin
        grp_fu_919_ce = 1'b1;
    end else begin
        grp_fu_919_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (ap_predicate_op37_read_state1 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        in0_V_TDATA_blk_n = in0_V_TVALID;
    end else begin
        in0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_354_p2 == 1'd0)) | ((ap_predicate_op37_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))))) & (ap_predicate_op37_read_state1 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        in0_V_TREADY = 1'b1;
    end else begin
        in0_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op194_write_state5 == 1'b1) & (1'b1 == ap_CS_iter4_fsm_state5))) begin
        out_V_TDATA_blk_n = out_V_TREADY;
    end else begin
        out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))) & (ap_predicate_op194_write_state5 == 1'b1) & (1'b1 == ap_CS_iter4_fsm_state5))) begin
        out_V_TVALID = 1'b1;
    end else begin
        out_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_0_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_10_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_11_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_12_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_13_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_14_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_1_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_2_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_3_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_4_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_5_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_6_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_7_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_8_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_9_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_354_p2 == 1'd0))) begin
        weights_V_TDATA_blk_n = weights_V_TVALID;
    end else begin
        weights_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_354_p2 == 1'd0)) | ((ap_predicate_op37_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_354_p2 == 1'd0))) begin
        weights_V_TREADY = 1'b1;
    end else begin
        weights_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state2 : begin
            if ((~((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_354_p2 == 1'd0)) | ((ap_predicate_op37_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & ~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & ((1'b0 == ap_CS_iter0_fsm_state1) | ((1'b1 == ap_CS_iter0_fsm_state1) & ((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_354_p2 == 1'd0)) | ((ap_predicate_op37_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_354_p2 == 1'd0)) | ((ap_predicate_op37_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter2_fsm)
        ap_ST_iter2_fsm_state3 : begin
            if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b0 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end
        end
        ap_ST_iter2_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter2_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter3_fsm)
        ap_ST_iter3_fsm_state4 : begin
            if ((~((1'b1 == ap_CS_iter4_fsm_state5) & (1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & ~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end else if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & ((1'b0 == ap_CS_iter2_fsm_state3) | ((1'b1 == ap_CS_iter4_fsm_state5) & (1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))))))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end
        end
        ap_ST_iter3_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter3_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter4_fsm)
        ap_ST_iter4_fsm_state5 : begin
            if ((~((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))) & ((1'b0 == ap_CS_iter3_fsm_state4) | ((1'b1 == ap_CS_iter4_fsm_state5) & (1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))))))) begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state0;
            end else if (((~((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))) & (icmp_ln249_reg_989_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_iter4_fsm_state5)) | (~((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))) & ~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4)))) begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state5;
            end else begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state5;
            end
        end
        ap_ST_iter4_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state5;
            end else begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter4_fsm = 'bx;
        end
    endcase
end

assign W_packed_V_fu_432_p1 = weights_V_TDATA[2:0];

assign add_ln840_10_fu_868_p2 = (zext_ln218_10_fu_725_p1 + zext_ln218_11_fu_744_p1);

assign add_ln840_11_fu_878_p2 = (zext_ln218_12_fu_763_p1 + zext_ln840_fu_782_p1);

assign add_ln840_12_fu_888_p2 = (zext_ln840_9_fu_884_p1 + zext_ln840_8_fu_874_p1);

assign add_ln840_13_fu_898_p2 = (zext_ln840_10_fu_894_p1 + zext_ln840_7_fu_864_p1);

assign add_ln840_1_fu_786_p2 = (zext_ln218_fu_559_p1 + zext_ln218_1_fu_574_p1);

assign add_ln840_2_fu_796_p2 = (zext_ln840_1_fu_792_p1 + result_V_fu_540_p3);

assign add_ln840_3_fu_802_p2 = (zext_ln218_2_fu_589_p1 + zext_ln218_3_fu_604_p1);

assign add_ln840_4_fu_812_p2 = (zext_ln218_4_fu_619_p1 + zext_ln218_5_fu_634_p1);

assign add_ln840_5_fu_822_p2 = (zext_ln840_3_fu_818_p1 + zext_ln840_2_fu_808_p1);

assign add_ln840_6_fu_832_p2 = (zext_ln840_4_fu_828_p1 + add_ln840_2_fu_796_p2);

assign add_ln840_7_fu_838_p2 = (zext_ln218_6_fu_649_p1 + zext_ln218_7_fu_668_p1);

assign add_ln840_8_fu_848_p2 = (zext_ln218_8_fu_687_p1 + zext_ln218_9_fu_706_p1);

assign add_ln840_9_fu_858_p2 = (zext_ln840_6_fu_854_p1 + zext_ln840_5_fu_844_p1);

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm[32'd0];

assign ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm[32'd1];

assign ap_CS_iter2_fsm_state0 = ap_CS_iter2_fsm[32'd0];

assign ap_CS_iter2_fsm_state3 = ap_CS_iter2_fsm[32'd1];

assign ap_CS_iter3_fsm_state0 = ap_CS_iter3_fsm[32'd0];

assign ap_CS_iter3_fsm_state4 = ap_CS_iter3_fsm[32'd1];

assign ap_CS_iter4_fsm_state0 = ap_CS_iter4_fsm[32'd0];

assign ap_CS_iter4_fsm_state5 = ap_CS_iter4_fsm[32'd1];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_354_p2 == 1'd0)) | ((ap_predicate_op37_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((1'b1 == ap_CS_iter4_fsm_state5) & (1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_state5_io = ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_condition_857 = (~((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_354_p2 == 1'd0)) | ((ap_predicate_op37_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op194_write_state5 == 1'b1) & (out_V_TREADY == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_inElem_reg_324 = 'bx;

always @ (*) begin
    ap_predicate_op194_write_state5 = ((icmp_ln290_reg_1017_pp0_iter3_reg == 1'd1) & (icmp_ln249_reg_989_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op37_read_state1 = ((icmp_ln253_fu_366_p2 == 1'd1) & (icmp_ln249_fu_354_p2 == 1'd0));
end

assign grp_fu_919_p1 = grp_fu_919_p10;

assign grp_fu_919_p10 = W_packed_V_reg_1007;

assign grp_fu_919_p2 = ((icmp_ln272_reg_1012_pp0_iter2_reg[0:0] == 1'b1) ? 8'd0 : ap_sig_allocacmp_add_i4_i338_load);

assign i_2_fu_360_p2 = (ap_sig_allocacmp_i_1 + 11'd1);

assign icmp_ln1039_10_fu_695_p2 = (($signed(grp_fu_919_p3) < $signed(zext_ln1039_2_fu_691_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1039_11_fu_714_p2 = (($signed(grp_fu_919_p3) < $signed(zext_ln1039_3_fu_710_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1039_12_fu_733_p2 = (($signed(grp_fu_919_p3) < $signed(zext_ln1039_4_fu_729_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1039_13_fu_752_p2 = (($signed(grp_fu_919_p3) < $signed(zext_ln1039_5_fu_748_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1039_14_fu_771_p2 = (($signed(grp_fu_919_p3) < $signed(zext_ln1039_6_fu_767_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1039_1_fu_548_p2 = (($signed(grp_fu_919_p3) < $signed(p_ZL7threshs_1_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1039_2_fu_563_p2 = (($signed(grp_fu_919_p3) < $signed(p_ZL7threshs_2_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1039_3_fu_578_p2 = (($signed(grp_fu_919_p3) < $signed(p_ZL7threshs_3_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1039_4_fu_593_p2 = (($signed(grp_fu_919_p3) < $signed(p_ZL7threshs_4_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1039_5_fu_608_p2 = (($signed(grp_fu_919_p3) < $signed(p_ZL7threshs_5_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1039_6_fu_623_p2 = (($signed(grp_fu_919_p3) < $signed(p_ZL7threshs_6_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1039_7_fu_638_p2 = (($signed(grp_fu_919_p3) < $signed(p_ZL7threshs_7_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1039_8_fu_657_p2 = (($signed(grp_fu_919_p3) < $signed(zext_ln1039_fu_653_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1039_9_fu_676_p2 = (($signed(grp_fu_919_p3) < $signed(zext_ln1039_1_fu_672_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1039_fu_529_p2 = (($signed(grp_fu_919_p3) < $signed(p_ZL7threshs_0_q0)) ? 1'b1 : 1'b0);

assign icmp_ln249_fu_354_p2 = ((ap_sig_allocacmp_i_1 == 11'd1400) ? 1'b1 : 1'b0);

assign icmp_ln253_fu_366_p2 = ((ap_sig_allocacmp_nf_2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln272_fu_436_p2 = ((ap_sig_allocacmp_sf_load_1 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln290_fu_448_p2 = ((sf_1_fu_442_p2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln302_fu_465_p2 = ((nf_fu_459_p2 == 32'd50) ? 1'b1 : 1'b0);

assign idxprom2_i_fu_511_p1 = nf_2_reg_984_pp0_iter2_reg;

assign inputBuf_V_3_fu_395_p1 = in0_V_TDATA[3:0];

assign nf_3_fu_471_p3 = ((icmp_ln302_fu_465_p2[0:0] == 1'b1) ? 32'd0 : nf_fu_459_p2);

assign nf_fu_459_p2 = (ap_sig_allocacmp_nf_2 + 32'd1);

assign out_V_TDATA = result_V_2_fu_904_p2;

assign p_ZL7threshs_0_address0 = idxprom2_i_fu_511_p1;

assign p_ZL7threshs_10_address0 = idxprom2_i_fu_511_p1;

assign p_ZL7threshs_11_address0 = idxprom2_i_fu_511_p1;

assign p_ZL7threshs_12_address0 = idxprom2_i_fu_511_p1;

assign p_ZL7threshs_13_address0 = idxprom2_i_fu_511_p1;

assign p_ZL7threshs_14_address0 = idxprom2_i_fu_511_p1;

assign p_ZL7threshs_1_address0 = idxprom2_i_fu_511_p1;

assign p_ZL7threshs_2_address0 = idxprom2_i_fu_511_p1;

assign p_ZL7threshs_3_address0 = idxprom2_i_fu_511_p1;

assign p_ZL7threshs_4_address0 = idxprom2_i_fu_511_p1;

assign p_ZL7threshs_5_address0 = idxprom2_i_fu_511_p1;

assign p_ZL7threshs_6_address0 = idxprom2_i_fu_511_p1;

assign p_ZL7threshs_7_address0 = idxprom2_i_fu_511_p1;

assign p_ZL7threshs_8_address0 = idxprom2_i_fu_511_p1;

assign p_ZL7threshs_9_address0 = idxprom2_i_fu_511_p1;

assign result_V_2_fu_904_p2 = (add_ln840_13_fu_898_p2 + add_ln840_6_fu_832_p2);

assign result_V_fu_540_p3 = {{3'd4}, {xor_ln1039_fu_534_p2}};

assign select_ln257_1_fu_411_p3 = ((trunc_ln257_fu_399_p1[0:0] == 1'b1) ? inputBuf_V_fu_102 : inputBuf_V_3_fu_395_p1);

assign select_ln257_fu_403_p3 = ((trunc_ln257_fu_399_p1[0:0] == 1'b1) ? inputBuf_V_3_fu_395_p1 : inputBuf_V_1_fu_106);

assign sf_1_fu_442_p2 = (ap_sig_allocacmp_sf_load_1 + 32'd1);

assign tmp_fu_385_p3 = ap_sig_allocacmp_sf_load[0:0];

assign trunc_ln257_fu_399_p1 = ap_sig_allocacmp_sf_load[0:0];

assign xor_ln1039_10_fu_700_p2 = (icmp_ln1039_10_fu_695_p2 ^ 1'd1);

assign xor_ln1039_11_fu_719_p2 = (icmp_ln1039_11_fu_714_p2 ^ 1'd1);

assign xor_ln1039_12_fu_738_p2 = (icmp_ln1039_12_fu_733_p2 ^ 1'd1);

assign xor_ln1039_13_fu_757_p2 = (icmp_ln1039_13_fu_752_p2 ^ 1'd1);

assign xor_ln1039_14_fu_776_p2 = (icmp_ln1039_14_fu_771_p2 ^ 1'd1);

assign xor_ln1039_1_fu_553_p2 = (icmp_ln1039_1_fu_548_p2 ^ 1'd1);

assign xor_ln1039_2_fu_568_p2 = (icmp_ln1039_2_fu_563_p2 ^ 1'd1);

assign xor_ln1039_3_fu_583_p2 = (icmp_ln1039_3_fu_578_p2 ^ 1'd1);

assign xor_ln1039_4_fu_598_p2 = (icmp_ln1039_4_fu_593_p2 ^ 1'd1);

assign xor_ln1039_5_fu_613_p2 = (icmp_ln1039_5_fu_608_p2 ^ 1'd1);

assign xor_ln1039_6_fu_628_p2 = (icmp_ln1039_6_fu_623_p2 ^ 1'd1);

assign xor_ln1039_7_fu_643_p2 = (icmp_ln1039_7_fu_638_p2 ^ 1'd1);

assign xor_ln1039_8_fu_662_p2 = (icmp_ln1039_8_fu_657_p2 ^ 1'd1);

assign xor_ln1039_9_fu_681_p2 = (icmp_ln1039_9_fu_676_p2 ^ 1'd1);

assign xor_ln1039_fu_534_p2 = (icmp_ln1039_fu_529_p2 ^ 1'd1);

assign zext_ln1039_1_fu_672_p1 = p_ZL7threshs_9_q0;

assign zext_ln1039_2_fu_691_p1 = p_ZL7threshs_10_q0;

assign zext_ln1039_3_fu_710_p1 = p_ZL7threshs_11_q0;

assign zext_ln1039_4_fu_729_p1 = p_ZL7threshs_12_q0;

assign zext_ln1039_5_fu_748_p1 = p_ZL7threshs_13_q0;

assign zext_ln1039_6_fu_767_p1 = p_ZL7threshs_14_q0;

assign zext_ln1039_fu_653_p1 = p_ZL7threshs_8_q0;

assign zext_ln218_10_fu_725_p1 = xor_ln1039_11_fu_719_p2;

assign zext_ln218_11_fu_744_p1 = xor_ln1039_12_fu_738_p2;

assign zext_ln218_12_fu_763_p1 = xor_ln1039_13_fu_757_p2;

assign zext_ln218_1_fu_574_p1 = xor_ln1039_2_fu_568_p2;

assign zext_ln218_2_fu_589_p1 = xor_ln1039_3_fu_583_p2;

assign zext_ln218_3_fu_604_p1 = xor_ln1039_4_fu_598_p2;

assign zext_ln218_4_fu_619_p1 = xor_ln1039_5_fu_613_p2;

assign zext_ln218_5_fu_634_p1 = xor_ln1039_6_fu_628_p2;

assign zext_ln218_6_fu_649_p1 = xor_ln1039_7_fu_643_p2;

assign zext_ln218_7_fu_668_p1 = xor_ln1039_8_fu_662_p2;

assign zext_ln218_8_fu_687_p1 = xor_ln1039_9_fu_681_p2;

assign zext_ln218_9_fu_706_p1 = xor_ln1039_10_fu_700_p2;

assign zext_ln218_fu_559_p1 = xor_ln1039_1_fu_553_p2;

assign zext_ln840_10_fu_894_p1 = add_ln840_12_fu_888_p2;

assign zext_ln840_1_fu_792_p1 = add_ln840_1_fu_786_p2;

assign zext_ln840_2_fu_808_p1 = add_ln840_3_fu_802_p2;

assign zext_ln840_3_fu_818_p1 = add_ln840_4_fu_812_p2;

assign zext_ln840_4_fu_828_p1 = add_ln840_5_fu_822_p2;

assign zext_ln840_5_fu_844_p1 = add_ln840_7_fu_838_p2;

assign zext_ln840_6_fu_854_p1 = add_ln840_8_fu_848_p2;

assign zext_ln840_7_fu_864_p1 = add_ln840_9_fu_858_p2;

assign zext_ln840_8_fu_874_p1 = add_ln840_10_fu_868_p2;

assign zext_ln840_9_fu_884_p1 = add_ln840_11_fu_878_p2;

assign zext_ln840_fu_782_p1 = xor_ln1039_14_fu_776_p2;

endmodule //MVAU_hls_28_Matrix_Vector_Activate_Stream_Batch
